{"version":3,"sources":["components/GamePlay/styledComponents.js","components/GameScore/styledComponents.js","components/GameScore/index.js","components/GameResults/styledComponents.js","components/GameResults/index.js","components/GamePlay/index.js","App.js","index.js"],"names":["GamePlayMainContainer","styled","div","withConfig","displayName","componentId","GameRulesView","PopUpView","PopUpImage","img","GameScoreContainer","GameScoreNameContainer","GameScoreName","h1","GameScoreBoardContainer","GameScoreBoardHeading","p","GameScoreBoardScore","GameScore","props","score","_jsxs","children","_jsx","GameContainer","GameButton","button","GameImage","ResultImageContainer","ResultName","ResultText","GameResults","choicesList","opponentRandomChoice","isShow","text","newArray","restartGame","_Fragment","type","onClick","id","src","imageUrl","alt","className","GamePlay","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","updateResult","you","opponent","setState","Math","floor","random","filter","eachItem","result","newScore","_inherits","_createClass","key","value","_this$state","this","Popup","modal","trigger","close","RiCloseLine","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa4359b1.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const GamePlayMainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background-color: #223a5f;\n  padding: 20px;\n`\n\nexport const GameRulesView = styled.div`\n  align-self: flex-end;\n  margin-top: auto;\n  @media screen and (max-width: 576px) {\n    margin-bottom: 40px;\n  }\n`\n\nexport const PopUpView = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 40vw;\n  justify-content: space-between;\n  padding: 10px;\n  @media screen and (max-width: 576px) {\n    height: 260px;\n    width: 100%;\n  }\n`\nexport const PopUpImage = styled.img`\n  width: 100%;\n  height: 90%;\n  margin-top: auto;\n`\n","import styled from 'styled-components'\n\nexport const GameScoreContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  width: 80%;\n  border: 2px solid #ffffff;\n  border-radius: 10px;\n  background-color: transparent;\n  margin-top: 2%;\n`\nexport const GameScoreNameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nexport const GameScoreName = styled.h1`\n  color: white;\n  font-size: 20px;\n  font-family: 'Bree Serif';\n  margin-top: 0px;\n  margin-bottom: 0px;\n  @media screen and (max-width: 576px) {\n    font-size: 14px;\n  }\n`\nexport const GameScoreBoardContainer = styled(GameScoreNameContainer)`\n  background-color: #ffffff;\n  width: 15%;\n  height: 100%;\n  border-radius: 10px;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 576px) {\n    width: 25%;\n  }\n`\nexport const GameScoreBoardHeading = styled.p`\n  color: #223a5f;\n  font-size: 20px;\n  margin-bottom: 0px;\n  @media screen and (max-width: 576px) {\n    font-size: 16px;\n  }\n`\nexport const GameScoreBoardScore = styled.p`\n  color: #223a5f;\n  font-size: 42px;\n  margin-top: 0px;\n  font-family: 'Roboto';\n  @media screen and (max-width: 576px) {\n    font-size: 24px;\n    margin-top: 10px;\n  }\n`\n","import {\n  GameScoreContainer,\n  GameScoreNameContainer,\n  GameScoreName,\n  GameScoreBoardContainer,\n  GameScoreBoardHeading,\n  GameScoreBoardScore,\n} from './styledComponents'\n\nconst GameScore = props => {\n  const {score} = props\n  return (\n    <GameScoreContainer>\n      <GameScoreNameContainer>\n        <GameScoreName>\n          ROCK\n          <br />\n          PAPER\n          <br />\n          SCISSORS\n        </GameScoreName>\n      </GameScoreNameContainer>\n      <GameScoreBoardContainer>\n        <GameScoreBoardHeading>Score</GameScoreBoardHeading>\n        <GameScoreBoardScore>{score}</GameScoreBoardScore>\n      </GameScoreBoardContainer>\n    </GameScoreContainer>\n  )\n}\n\nexport default GameScore\n","import styled from 'styled-components'\n\nexport const GameContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 400px;\n  flex-wrap: wrap;\n  margin-top: 60px;\n  @media screen and (max-width: 576px) {\n    width: 250px;\n    height: 250px;\n    margin-left: 15px;\n  }\n`\nexport const GameButton = styled.button`\n  width: 150px;\n  height: 150px;\n  background-color: transparent;\n  border-style: none;\n  outline: none;\n  cursor: pointer;\n  @media screen and (max-width: 576px) {\n    width: 100px;\n    height: 100px;\n    margin-top: 0px;\n    margin-right: 20px;\n  }\n`\nexport const GameImage = styled.img`\n  width: 150px;\n  height: 150px;\n  @media screen and (max-width: 576px) {\n    width: 100px;\n    height: 100px;\n  }\n`\n\nexport const ResultImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 40px;\n  @media screen and (max-width: 576px) {\n    width: 30%;\n  }\n`\nexport const ResultName = styled.p`\n  color: white;\n  font-size: 20px;\n  @media screen and (max-width: 576px) {\n    font-size: 14px;\n  }\n`\nexport const ResultText = styled.p`\n  color: white;\n  font-size: 25px;\n  @media screen and (max-width: 576px) {\n    font-size: 16px;\n  }\n`\nexport const ResultButton = styled.button`\n  width: 100px;\n  height: 28px;\n  padding: 10px;\n  color: #223a5f;\n  font-size: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  border-style: none;\n  outline: none;\n`\n","import {\n  GameContainer,\n  GameButton,\n  GameImage,\n  ResultText,\n  ResultImageContainer,\n  ResultName,\n} from './styledComponents'\n\nimport './index.css'\n\nconst GameResults = props => {\n  const {\n    choicesList,\n    opponentRandomChoice,\n    isShow,\n    text,\n    newArray,\n    restartGame,\n  } = props\n  const showGame = () => (\n    <GameContainer>\n      {isShow && (\n        <>\n          <GameButton\n            type=\"button\"\n            data-testid=\"rockButton\"\n            onClick={() => opponentRandomChoice(choicesList[0].id)}\n          >\n            <GameImage\n              src={choicesList[0].imageUrl}\n              alt={choicesList[0].id}\n              key={choicesList[0].id}\n            />\n          </GameButton>\n          <GameButton\n            type=\"button\"\n            data-testid=\"scissorsButton\"\n            onClick={() => opponentRandomChoice(choicesList[1].id)}\n          >\n            <GameImage\n              src={choicesList[1].imageUrl}\n              alt={choicesList[1].id}\n              key={choicesList[1].id}\n            />\n          </GameButton>\n          <GameButton\n            type=\"button\"\n            data-testid=\"paperButton\"\n            onClick={() => opponentRandomChoice(choicesList[2].id)}\n          >\n            <GameImage\n              src={choicesList[2].imageUrl}\n              alt={choicesList[2].id}\n              key={choicesList[2].id}\n            />\n          </GameButton>\n        </>\n      )}\n      {!isShow && (\n        <>\n          <ResultImageContainer>\n            <ResultName>YOU</ResultName>\n            <GameImage src={newArray[0].imageUrl} alt=\"your choice\" />\n          </ResultImageContainer>\n          <ResultImageContainer>\n            <ResultName>OPPONENT</ResultName>\n            <GameImage src={newArray[1].imageUrl} alt=\"opponent choice\" />\n          </ResultImageContainer>\n          <ResultImageContainer>\n            <ResultText>{text}</ResultText>\n            <button\n              className=\"result-button\"\n              type=\"button\"\n              onClick={restartGame}\n            >\n              PLAY AGAIN\n            </button>\n          </ResultImageContainer>\n        </>\n      )}\n    </GameContainer>\n  )\n  return showGame()\n}\n\nexport default GameResults\n","import {Component} from 'react'\n\nimport Popup from 'reactjs-popup'\nimport {RiCloseLine} from 'react-icons/ri'\nimport './index.css'\n\nimport {\n  GamePlayMainContainer,\n  GameRulesView,\n  PopUpView,\n  PopUpImage,\n} from './styledComponents'\n\nimport GameScore from '../GameScore'\nimport GameResults from '../GameResults'\n\nconst choicesList = [\n  {\n    id: 'ROCK',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',\n  },\n  {\n    id: 'SCISSORS',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',\n  },\n  {\n    id: 'PAPER',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',\n  },\n]\n\nclass GamePlay extends Component {\n  state = {\n    isShow: true,\n    text: 'YOU WON',\n    score: 0,\n    newArray: [choicesList[0], choicesList[1]],\n  }\n\n  updateResult = (you, opponent) => {\n    if (you.id === 'ROCK') {\n      switch (opponent.id) {\n        case 'PAPER':\n          return 'YOU LOSE'\n        case 'SCISSORS':\n          return 'YOU WON'\n        default:\n          return 'IT IS DRAW'\n      }\n    } else if (you.id === 'PAPER') {\n      switch (opponent.id) {\n        case 'ROCK':\n          return 'YOU WON'\n        case 'SCISSORS':\n          return 'YOU LOSE'\n        default:\n          return 'IT IS DRAW'\n      }\n    } else {\n      switch (opponent.id) {\n        case 'ROCK':\n          return 'YOU LOSE'\n        case 'PAPER':\n          return 'YOU WON'\n        default:\n          return 'IT IS DRAW'\n      }\n    }\n  }\n\n  restartGame = () => this.setState({isShow: true})\n\n  opponentRandomChoice = id => {\n    const {score} = this.state\n    const opponent = choicesList[Math.floor(Math.random() * choicesList.length)]\n    const you = choicesList.filter(eachItem => eachItem.id === id)\n    const result = this.updateResult(you[0], opponent)\n    let newScore = score\n    if (result === 'YOU WON') {\n      newScore = score + 1\n    } else if (result === 'YOU LOSE') {\n      newScore = score - 1\n    } else {\n      newScore = score\n    }\n    this.setState({\n      score: newScore,\n      isShow: false,\n      newArray: [you[0], opponent],\n      text: result,\n    })\n  }\n\n  render() {\n    const {isShow, text, score, newArray} = this.state\n    return (\n      <GamePlayMainContainer>\n        <GameScore score={score} />\n        <GameResults\n          choicesList={choicesList}\n          text={text}\n          isShow={isShow}\n          newArray={newArray}\n          opponentRandomChoice={this.opponentRandomChoice}\n          restartGame={this.restartGame}\n        />\n\n        <GameRulesView>\n          <Popup\n            modal\n            trigger={\n              <button type=\"button\" className=\"trigger-button\">\n                RULES\n              </button>\n            }\n          >\n            {close => (\n              <PopUpView>\n                <button\n                  type=\"button\"\n                  className=\"trigger-button-close\"\n                  onClick={() => close()}\n                >\n                  Close <RiCloseLine />\n                </button>\n                <PopUpImage\n                  src=\"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png\"\n                  alt=\"rules\"\n                />\n              </PopUpView>\n            )}\n          </Popup>\n        </GameRulesView>\n      </GamePlayMainContainer>\n    )\n  }\n}\n\nexport default GamePlay\n","import GamePlay from './components/GamePlay'\nimport './App.css'\n\nconst App = () => <GamePlay />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}